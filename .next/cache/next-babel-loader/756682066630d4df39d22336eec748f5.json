{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nimport { useState } from 'react';\nexport var useSignUpForm = function useSignUpForm(callback) {\n  var _useState = useState({}),\n      inputs = _useState[0],\n      setInputs = _useState[1];\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(event) {\n      var message;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!event) {\n                _context2.next = 8;\n                break;\n              }\n\n              event.preventDefault();\n\n              if (!(inputs.password1 === inputs.password2)) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 5;\n              return fetch(\"http://localhost:3000/api/users\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: _JSON$stringify({\n                  firstName: inputs.firstName,\n                  lastName: inputs.lastName,\n                  username: inputs.username,\n                  password: inputs.password1\n                })\n              }).then(\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee(res) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return res.json();\n\n                        case 2:\n                          message = _context.sent;\n\n                        case 3:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n\n            case 5:\n              _context2.next = 8;\n              break;\n\n            case 7:\n              message = \"Please confirm that both passwords match.\";\n\n            case 8:\n              callback(message);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleInputChange = function handleInputChange(event) {\n    event.persist();\n    setInputs(function (inputs) {\n      return _objectSpread({}, inputs, _defineProperty({}, event.target.name, event.target.value));\n    });\n  };\n\n  return {\n    handleSubmit: handleSubmit,\n    handleInputChange: handleInputChange,\n    inputs: inputs\n  };\n};\nexport var useLogin = function useLogin(callback) {\n  var _useState2 = useState({}),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var handleLogin =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(event) {\n      var message;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!event) {\n                _context4.next = 4;\n                break;\n              }\n\n              event.preventDefault();\n              _context4.next = 4;\n              return fetch(\"http://localhost:3000/api/users/\" + inputs.username, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: _JSON$stringify({\n                  password: inputs.password\n                })\n              }).then(\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3(res) {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return res.json();\n\n                        case 2:\n                          message = _context3.sent;\n\n                        case 3:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x4) {\n                  return _ref4.apply(this, arguments);\n                };\n              }());\n\n            case 4:\n              callback(message);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleLogin(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleInputChange = function handleInputChange(event) {\n    event.persist();\n    setInputs(function (inputs) {\n      return _objectSpread({}, inputs, _defineProperty({}, event.target.name, event.target.value));\n    });\n  };\n\n  return {\n    handleLogin: handleLogin,\n    handleInputChange: handleInputChange,\n    inputs: inputs\n  };\n};","map":{"version":3,"sources":["/Users/luciaokeh/Documents/exploration/components/CustomHooks.js"],"names":["fetch","useState","useSignUpForm","callback","inputs","setInputs","handleSubmit","event","preventDefault","password1","password2","method","headers","body","firstName","lastName","username","password","then","res","json","message","handleInputChange","persist","target","name","value","useLogin","handleLogin"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport {useState} from 'react';\n\nexport const useSignUpForm = (callback) => {\n  const [inputs, setInputs] = useState({});\n\n  const handleSubmit = async (event) => {\n    var message;\n\n    if(event){\n      event.preventDefault();\n      if(inputs.password1 === inputs.password2){\n        await fetch(\"http://localhost:3000/api/users\",{\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n          firstName: inputs.firstName,\n          lastName: inputs.lastName,\n          username: inputs.username,\n          password: inputs.password1,\n          })\n        }).then(async (res) => {\n          message = await res.json();\n        });\n\n      }else{\n        message = \"Please confirm that both passwords match.\"\n      }\n    }\n    callback(message);\n  }\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  return {handleSubmit, handleInputChange, inputs};\n};\n\nexport const useLogin = (callback) => {\n  const [inputs, setInputs] = useState({});\n\n  const handleLogin = async (event) => {\n    var message;\n\n    if(event){\n      event.preventDefault();\n\n      await fetch(\"http://localhost:3000/api/users/\"+inputs.username, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: inputs.password,\n        })\n      }).then(async (res) => {\n        message = await res.json();\n      });\n   \n    }\n    callback(message);\n  }\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n  return {handleLogin, handleInputChange, inputs};\n};\n"]},"metadata":{},"sourceType":"module"}