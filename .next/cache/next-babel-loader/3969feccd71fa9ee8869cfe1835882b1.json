{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//import fetch from 'isomorphic-unfetch';\nimport Scenario from '../components/Scenario';\nimport Choices from '../components/Choices';\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport '../css/index.css';\nimport '../fonts/Populationzerobb-ZDXK.otf';\nimport '../fonts/Scorchedearth-4Ljp.otf';\n\nconst Page = props => {\n  var lastSavedScenario = \"5d88d9091c9d4400003c6bce\";\n\n  if (props.user) {\n    lastSavedScenario = props.user.savedPoint;\n  }\n\n  const {\n    0: scenarioId,\n    1: setScenarioId\n  } = useState(lastSavedScenario);\n\n  async function saveProgress() {\n    await fetch(\"http://localhost:3000/api/users/\" + props.user.username, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: _JSON$stringify({\n        savedPoint: scenarioId\n      })\n    }).then(async res => {\n      alert(\"Progress Successfully saved\");\n    });\n  }\n\n  ;\n\n  function signOut() {\n    setScenarioId(\"5d88d9091c9d4400003c6bce\");\n  }\n\n  ;\n  return __jsx(\"div\", {\n    className: \"fill\"\n  }, __jsx(\"div\", {\n    className: \"nav\"\n  }, props.user ? __jsx(\"div\", {\n    className: \"navContent\"\n  }, __jsx(\"h2\", null, \"Signed in as \", props.user.firstName), __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    onClick: signOut\n  }, \"Sign Out\")), __jsx(\"button\", {\n    onClick: saveProgress\n  }, \"Save Progress\")) : __jsx(\"div\", {\n    className: \"navContent\"\n  }, __jsx(Link, {\n    href: \"/login\"\n  }, __jsx(\"a\", null, \"Log In\")), __jsx(Link, {\n    href: \"/signup\"\n  }, __jsx(\"a\", null, \"Sign Up\")))), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(\"div\", {\n    className: \"inner\"\n  }, __jsx(Scenario, {\n    scenarioId: scenarioId,\n    setScenarioId: setScenarioId\n  }))));\n};\n\nPage.getInitialProps = ({\n  query\n}) => {\n  var user;\n\n  if (query && query.user) {\n    user = JSON.parse(query.user);\n  } else {\n    user = null;\n  }\n\n  return {\n    user\n  };\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/luciaokeh/Documents/exploration/pages/index.js"],"names":["Scenario","Choices","useState","Link","Page","props","lastSavedScenario","user","savedPoint","scenarioId","setScenarioId","saveProgress","fetch","username","method","headers","body","then","res","alert","signOut","firstName","getInitialProps","query","JSON","parse"],"mappings":";;;AAAA;AACA,OAAOA,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAO,kBAAP;AACA,OAAO,oCAAP;AACA,OAAO,iCAAP;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,MAAIC,iBAAiB,GAAG,0BAAxB;;AACA,MAAGD,KAAK,CAACE,IAAT,EAAc;AACZD,IAAAA,iBAAiB,GAAGD,KAAK,CAACE,IAAN,CAAWC,UAA/B;AACD;;AAED,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAACI,iBAAD,CAA5C;;AAEA,iBAAeK,YAAf,GAA6B;AAC3B,UAAMC,KAAK,CAAC,qCAAmCP,KAAK,CAACE,IAAN,CAAWM,QAA/C,EAAyD;AAClEC,MAAAA,MAAM,EAAE,KAD0D;AAElEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFyD;AAKlEC,MAAAA,IAAI,EAAE,gBAAe;AACrBR,QAAAA,UAAU,EAAEC;AADS,OAAf;AAL4D,KAAzD,CAAL,CAQHQ,IARG,CAQE,MAAOC,GAAP,IAAe;AACrBC,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACD,KAVK,CAAN;AAWD;;AAAA;;AAED,WAASC,OAAT,GAAkB;AAChBV,IAAAA,aAAa,CAAC,0BAAD,CAAb;AACD;;AAAA;AAED,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KACL;AAAK,IAAA,SAAS,EAAC;AAAf,KACCL,KAAK,CAACE,IAAN,GACK;AAAK,IAAA,SAAS,EAAC;AAAf,KACA,mCAAkBF,KAAK,CAACE,IAAN,CAAWc,SAA7B,CADA,EAEA,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAe;AAAG,IAAA,OAAO,EAAED;AAAZ,gBAAf,CAFA,EAGA;AAAQ,IAAA,OAAO,EAAET;AAAjB,qBAHA,CADL,GAMK;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAoB,0BAApB,CADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAqB,2BAArB,CAFF,CAPN,CADK,EAeL;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAEF,UAAtB;AAAkC,IAAA,aAAa,EAAEC;AAAjD,IADF,CADF,CAfK,CAAP;AAsBD,CAhDD;;AAkDAN,IAAI,CAACkB,eAAL,GAAuB,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAClC,MAAIhB,IAAJ;;AACA,MAAGgB,KAAK,IAAIA,KAAK,CAAChB,IAAlB,EAAuB;AACrBA,IAAAA,IAAI,GAAGiB,IAAI,CAACC,KAAL,CAAWF,KAAK,CAAChB,IAAjB,CAAP;AACD,GAFD,MAEK;AACHA,IAAAA,IAAI,GAAE,IAAN;AACD;;AACD,SAAO;AAACA,IAAAA;AAAD,GAAP;AACD,CARD;;AAUA,eAAeH,IAAf","sourcesContent":["//import fetch from 'isomorphic-unfetch';\nimport Scenario from '../components/Scenario';\nimport Choices from '../components/Choices';\nimport {useState} from 'react';\nimport Link from 'next/link'\n\nimport '../css/index.css';\nimport '../fonts/Populationzerobb-ZDXK.otf';\nimport '../fonts/Scorchedearth-4Ljp.otf';\n\nconst Page = (props) => {\n  var lastSavedScenario = \"5d88d9091c9d4400003c6bce\";\n  if(props.user){\n    lastSavedScenario = props.user.savedPoint;\n  }\n\n  const [scenarioId, setScenarioId] = useState(lastSavedScenario);\n\n  async function saveProgress(){\n    await fetch(\"http://localhost:3000/api/users/\"+props.user.username, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n      savedPoint: scenarioId,\n      })\n    }).then(async (res) => {\n      alert(\"Progress Successfully saved\")\n    });\n  };\n\n  function signOut(){\n    setScenarioId(\"5d88d9091c9d4400003c6bce\");\n  };\n\n  return <div className=\"fill\">\n    <div className=\"nav\">\n    {props.user  \n        ? <div className=\"navContent\">\n          <h2>Signed in as {props.user.firstName}</h2>\n          <Link href=\"/\"><a onClick={signOut}>Sign Out</a></Link>\n          <button onClick={saveProgress}>Save Progress</button>\n          </div>\n        : <div className=\"navContent\">\n            <Link href=\"/login\"><a>Log In</a></Link>\n            <Link href=\"/signup\"><a>Sign Up</a></Link>\n          </div>\n       }\n    </div>\n    {/* <div className=\"background\"/> */}\n    <div className=\"content\">\n      <div className=\"inner\">\n        <Scenario scenarioId={scenarioId} setScenarioId={setScenarioId}  />\n      {/* <Choices scenarioId={scenarioId} setScenarioId={setScenarioId} /> */}\n      </div>\n    </div>\n  </div>\n};\n\nPage.getInitialProps = ({query}) => {\n  var user;\n  if(query && query.user){\n    user = JSON.parse(query.user);\n  }else{\n    user= null; \n  }\n  return {user};\n}\n\nexport default Page;\n\n"]},"metadata":{},"sourceType":"module"}