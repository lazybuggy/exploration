{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect } from 'react';\nimport '../css/choices.css';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nvar Scenario = function Scenario(props) {\n  var _useState = useState([]),\n      choices = _useState[0],\n      setChoices = _useState[1];\n\n  function fetchData() {\n    return _fetchData.apply(this, arguments);\n  }\n\n  function _fetchData() {\n    _fetchData = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:3000/api/choices/\" + props.scenarioId);\n\n            case 2:\n              res = _context.sent;\n              res.json().then(function (res) {\n                return setChoices(res);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchData.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    fetchData();\n  }, [choices]);\n  return __jsx(\"div\", {\n    className: \"choicesContainer\"\n  }, __jsx(ReactCSSTransitionGroup, {\n    transitionName: \"example\",\n    transitionLeaveTimeout: 500,\n    transitionEnterTimeout: 500\n  }, choices.map(function (choice, key) {\n    return __jsx(\"button\", {\n      key: choice._id,\n      className: \"choice\",\n      onClick: function onClick() {\n        return props.setScenarioId(choice.nextScenarioId);\n      }\n    }, choice.text);\n  })));\n};\n\nexport default Scenario;","map":{"version":3,"sources":["/Users/luciaokeh/Documents/exploration/components/Choices.js"],"names":["fetch","useState","useEffect","ReactCSSTransitionGroup","Scenario","props","choices","setChoices","fetchData","scenarioId","res","json","then","map","choice","key","_id","setScenarioId","nextScenarioId","text"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAO,oBAAP;AACA,OAAOC,uBAAP,MAAoC,mCAApC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,kBACIJ,QAAQ,CAAC,EAAD,CADZ;AAAA,MACnBK,OADmB;AAAA,MACVC,UADU;;AAAA,WAGXC,SAHW;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAG1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACoBR,KAAK,CAAC,uCAAqCK,KAAK,CAACI,UAA5C,CADzB;;AAAA;AACQC,cAAAA,GADR;AAEEA,cAAAA,GAAG,CAACC,IAAJ,GAAWC,IAAX,CAAgB,UAAAF,GAAG;AAAA,uBAAEH,UAAU,CAACG,GAAD,CAAZ;AAAA,eAAnB;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAH0B;AAAA;AAAA;;AAQ1BR,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,SAAS;AACV,GAFQ,EAEP,CAACF,OAAD,CAFO,CAAT;AAIA,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KACL,MAAC,uBAAD;AACE,IAAA,cAAc,EAAC,SADjB;AAEE,IAAA,sBAAsB,EAAE,GAF1B;AAGE,IAAA,sBAAsB,EAAE;AAH1B,KAICA,OAAO,CAACO,GAAR,CAAY,UAACC,MAAD,EAAQC,GAAR,EAAgB;AACzB,WACE;AACE,MAAA,GAAG,EAAED,MAAM,CAACE,GADd;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMX,KAAK,CAACY,aAAN,CAAoBH,MAAM,CAACI,cAA3B,CAAN;AAAA;AAHX,OAIGJ,MAAM,CAACK,IAJV,CADF;AAQD,GATF,CAJD,CADK,CAAP;AAmBD,CA/BD;;AAiCA,eAAef,QAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport {useState, useEffect} from 'react';\nimport '../css/choices.css';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nconst Scenario = (props) => {\n  const [choices, setChoices] = useState([]);\n\n  async function fetchData(){\n    const res = await fetch(\"http://localhost:3000/api/choices/\"+props.scenarioId);\n    res.json().then(res=>setChoices(res));\n  }\n  \n  useEffect(() => {\n    fetchData();\n  },[choices]);\n\n  return <div className=\"choicesContainer\"> \n    <ReactCSSTransitionGroup\n      transitionName=\"example\"\n      transitionLeaveTimeout={500}\n      transitionEnterTimeout={500}> \n    {choices.map((choice,key) => {\n        return (\n          <button \n            key={choice._id} \n            className=\"choice\"\n            onClick={() => props.setScenarioId(choice.nextScenarioId)}>\n            {choice.text}\n          </button>\n        );\n      })\n    }\n    </ReactCSSTransitionGroup>\n\n  </div>\n};\n\nexport default Scenario;\n"]},"metadata":{},"sourceType":"module"}